# -*- coding: utf-8 -*-
"""mandelbrot

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n0cSNxD4I-b_P5TGFpAfViowklGrKQkZ
"""

#Import libraries
import numpy as np
import matplotlib.pyplot as plt

#Create a 1000 by 1000 array of x,y pairs with x values
#between -2 and 1 and y value between -1.5 and 1.5
x,y = np.mgrid[-2:1:1000j, -1.5:1.5:1000j]

#Create an array of complex numbers
c = x + 1j * y

#Create an array to store the value of z for each point in c
mandelbrot_set = np.zeros(c.shape)

#Iterate through each point in c
for i in range(c.shape[0]):
    for j in range(c.shape[1]):
        #Initialize variables
        z = 0
        iterations = 0
        #Perform the Mandelbrot test
        while abs(z) < 50 and iterations < 1000:
            z = z ** 2 + c[i, j]
            iterations += 1
        #Store the absolute value of z
        mandelbrot_set[i, j] = abs(z)

#Mask the points that converged (z < 50)
mask = mandelbrot_set < 50

#Plot the discovered Mandelbrot fractal
plt.grid(linestyle = '--', linewidth = .5)
plt.imshow(mask.T, extent = (-2 , 1, -1.5 , 1.5))
plt.gray()
plt.savefig('mandelbrot.png')
plt.show()